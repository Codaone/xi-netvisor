
            __   ___   _   _      _         _                
            \ \ / (_) | \ | |    | |       (_)               
             \ V / _  |  \| | ___| |___   ___ ___  ___  _ __ 
              > < | | | . ` |/ _ \ __\ \ / / / __|/ _ \| '__|
             / . \| | | |\  |  __/ |_ \ V /| \__ \ (_) | |   
            /_/ \_\_| |_| \_|\___|\__| \_/ |_|___/\___/|_|  


                    Netvisor invoicing interface 


Xi Netvisor consist now only invoicing interface to Netvisor
other Netvisor interfaces are not yet implemented. For



Many of the configurated parameters you must obtain from Netvisor.
Configuration bellow is just an example. Beaware that quality of documentation
is appailing so be ready for a major fustration.


example of config:

    ; Netvisor interface
    netvisor.interface.host           = "https://www.netvisor.biz"              // for testserver use "http://koulutus.netvisor.fi"
    netvisor.interface.sender         = "Testiclient"                           // Just pick a some name that describes your service
    netvisor.interface.customerId     = "XX_yyyy_1yyy"                          // You must create this manually in your Netvisor management page
    netvisor.interface.partnerId      = "Xxx_yyy"                               // Get this from your Netvisor contact 
    netvisor.interface.organizationId = "2521043-1"                             // Your Company Id

    netvisor.interface.userKey        = "D953E3D10457F778B009F88B038CC3C7"      // You must create this manually in your Netvisor management page
    netvisor.interface.partnerKey     = "3BCBFB382CE884YD6C8D4F4FC1C2AC95"      // Get this from your Netvisor contact 

    netvisor.interface.language       = "FI"
    netvisor.interface.enabled        = true


Usecase example:

    $xmlify = new Xi\Netvisor\Zend\XmlifyInvoiceData();         // new xmlify class
    $xmlify->setInvoiceData($invoiceData);                      // sets invoice data to xml generator
    $xml = $xmlify->createXml();                                // creates xml, throws exception if data is not valid

    $netvisor = new Xi\Netvisor\Zend\Invoicing();               // netvisor interface
    $netvisor->addInvoice($xml);                                // sends new invoice to netvisor (you can also edit old invoice with editInvoce -method)


Invoice data should just be an array containing invoice fields:

  
        $invoiceData = array(
            'SalesInvoiceNumber'                        => 123456, 
            'SalesInvoiceDate'                          => '2011-12-12', 
            'SalesInvoiceDeliveryDate'                  => '2011-12-12', 
            'SalesInvoiceReferenceNumber'               => 7773,
            'SalesInvoiceAmount'                        => 12,
            'SellerIdentifier'                          => 124124,
            'SellerName'                                => 'Petteri Peppele',
            'SalesInvoiceStatus'                        => 'open',
            'SalesInvoiceFreeTextBeforeLines'           => 'before lines',
            'SalesInvoiceFreeTextAfterLines'            => 'after lines',
            'SalesInvoiceOurReference'                  => 'our reference',
            'SalesInvoiceYourReference'                 => 'your reference',
            'SalesInvoicePrivateComment'                => 'private comment',
            
            'InvoicingCustomerIdentifier'               => '1',
            'InvoicingCustomerIdentifierType'           => 'netvisor',
            'InvoicingCustomerName'                     => 'customer name',
            'InvoicingCustomerNameExtension'            => 'name extension',
            'InvoicingCustomerAddressLine'              => 'mets채l채nkuja 5',
            'InvoicingCustomerPostNumber'               => '02593',
            'InvoicingCustomerTown'                     => 'Kepukkala',
            'InvoicingCustomerCountryCode'              => 'FI',                // ISO-3166
            
            'DeliveryAddressName'                       => 'deliveryaddress name',
            'DeliveryAddressNameExtension'              => 'deliveryadress name extension',
            'DeliveryAddressLine'                       => 'mets채l채nkuja 6',
            'DeliveryAddressPostNumber'                 => '23563',
            'DeliveryAddressTown'                       => 'Kepukkala',
            'DeliveryAddressCountryCode'                => 'FI',                // ISO-3166

            'DeliveryMethod'                            => 'post',
            'DeliveryTerm'                              => 'delivery term',
            'PaymentTermNetDays'                        => 21,
            'PaymentTermCashDiscountDays'               => 5,
            'PaymentTermCashDiscount'                   => 5,5,
            'ExpectPartialPayments'                     => 1,
            'TryDirectDebitLink'                        => 0,
            'TryDirectDebitLinkMode'                    => 'fail_on_error',

            'InvoiceLines' => array(
                array(               
                    'ProductIdentifier'                         => '5',
                    'ProductIdentifierType'                     => 'netvisor',
                    'ProductName'                               => 'Banaani',
                    'ProductUnitPrice'                          => 100,
                    'ProductUnitPriceType'                      => 'net',
                    'ProductVatPercentage'                      => 22,
                    'ProductVatPercentageVatCode'               => 'KOMY',
                    'SalesInvoiceProductLineQuantity'           => 5,
                    'SalesInvoiceProductLineDiscountPercentage' => 10,
                    'AccountingAccountSuggestion'               => '3000',
                ),
                array(               
                    'ProductIdentifier'                         => '5',
                    'ProductIdentifierType'                     => 'netvisor',
                    'ProductName'                               => 'tuote 2',
                    'ProductUnitPrice'                          => 10,
                    'ProductUnitPriceType'                      => 'net',
                    'ProductVatPercentage'                      => 22,
                    'ProductVatPercentageVatCode'               => 'KOMY',
                    'SalesInvoiceProductLineQuantity'           => 5,
                ),
             ),
            
            'Dimension' => array(                                               // I don't really even know what these are.
                array(
                    'DimensionName'                             => 'projekti',
                    'DimensionItem'                             => 'palkanlaskenta',                 
                ),
                 array(
                    'DimensionName'                             => 'projekti2',
                    'DimensionItem'                             => 'palkanlaskenta2',                 
                ),               
            ),

            'InvoiceVoucherLines' => array(
                array(
                    'LineSum'                                   => 100,
                    'LineSumType'                               => 'net',
                    'Description'                               => 'invoice voucher line description',
                    'AccountNumber'                             => '1101',      // From "tilikartta", pick what is right for your business.
                    'VatPercent'                                => '22',
                    'VatCode'                                   => 'KOMY',
                ),
                
            ),
            
            'SalesInvoiceAttachments' => array(
                array(
                    'MimeType'                                  => 'xxx',
                    'AttachmentDescription'                     => 'cool attachmentt',
                    'FileName'                                  => 'tname of file',
                    'DocumentData'                              => 'base64encodedShit',
                ),    
            ),
            'Tags' => array(
                array(
                    'TagName'                                   => 'tagi',
                    'TagValue'                                  => 'taginvalue',
                    'TagValueDataType'                          => 'text',
                ),
            ),
        ); 



FYI:
    You must do following things to get all running:
    - Get your partner id and key from Netvisor
    - Get access to Netvisor web management page (testing has its own management page)
    - Activate use of external intefcase in your management page
        - Create new interface id & key with your management page (same as above)
    - You can create and management your products in Netvisor. (Product netvisor key is shown in URL when you edit it)
    - There is some old documentation available at Netvisor. You can ask them to have access to their interface documentation.


Todo:
    - Remove basic functionality from Zend and just create adapters for different frameworks when needed.
    - Other netvisor interfaces, not just invoicing.